# name: Build on DockerHub and Deploy to AWS
# on:
#   push:
#     branches:
#       - qubitsfrontend
# env:
#   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#   AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
#   QBFRONT_HOST_DNS: ${{ secrets.QBFRONT_HOST_DNS }}
#   QBFRONT_USERNAME: ${{ secrets.QBFRONT_USERNAME }}
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           push: true
#           Dockerfile: ./Dockerfile
#           tags: karthickmuppilirajan/qbfrontend:latest
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.DOCKERHUB_USERNAME }}
#           password: ${{ env.DOCKERHUB_TOKEN }}
#       # - name: Set permissions for private key
#       #   run: |
#       #     echo "${{ secrets.AWS_PRIVATE_KEY }}" | base64 -d > key.pem
#       #     chmod 600 key.pem
#       - name: SSH into EC2 and Run Script
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.QBFRONT_HOST_DNS }}
#           username: ${{ secrets.QBFRONT_USERNAME }}
#           key: ${{ secrets.AWS_PRIVATE_KEY }} 
#           script: |
#             sudo docker pull karthickmuppilirajan/qbfrontend:latest
#             sudo docker ps -a
#             sudo docker stop qbfrontend
#             sudo docker rm qbfrontend
#             sudo docker run -d --name qbfrontend -p 80:3000 karthickmuppilirajan/qbfrontend:latest

name: Release and Push to ECR

on:
  push:
    branches:
      - qubitsfrontend

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Determine Current Version
        id: determine_version
        run: |
          # Assuming `release-please` determines the version from the commit history
          current_version=$(npx release-please --dry-run | grep "Current version:" | cut -d ' ' -f 3)

          # Use output variable to pass the current version to the next steps
          echo "RELEASE_VERSION=${current_version}" >> $GITHUB_ENV

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4

  build_and_push:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Image Tag
        run: echo "DOCKER_TAG=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build -t your-ecr-repository:${DOCKER_TAG} .
          docker tag your-ecr-repository:${DOCKER_TAG} your-account-id.dkr.ecr.your-region.amazonaws.com/your-ecr-repository:${DOCKER_TAG}
          docker push your-account-id.dkr.ecr.your-region.amazonaws.com/your-ecr-repository:${DOCKER_TAG}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: your-region

